// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicSchoolWEB.Data;

#nullable disable

namespace MusicSchoolWEB.Migrations
{
    [DbContext(typeof(MusicSchoolWEBContext))]
    [Migration("20250222124340_Feedback")]
    partial class Feedback
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MusicSchoolWEB.Models.Feedback", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MembruID")
                        .HasColumnType("int");

                    b.Property<int?>("ProgramareID")
                        .HasColumnType("int");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MembruID");

                    b.HasIndex("ProgramareID");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("MusicSchoolWEB.Models.Instrument", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Instrument");
                });

            modelBuilder.Entity("MusicSchoolWEB.Models.Membru", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Membru");
                });

            modelBuilder.Entity("MusicSchoolWEB.Models.MembruInstrument", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("InstrumentID")
                        .HasColumnType("int");

                    b.Property<int?>("MembruID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("InstrumentID");

                    b.HasIndex("MembruID");

                    b.ToTable("MembruInstrument");
                });

            modelBuilder.Entity("MusicSchoolWEB.Models.Programare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AdresaProgramarii")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OraProgramarii")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentID")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StudentID");

                    b.HasIndex("TeacherID");

                    b.ToTable("Programare");
                });

            modelBuilder.Entity("MusicSchoolWEB.Models.Feedback", b =>
                {
                    b.HasOne("MusicSchoolWEB.Models.Membru", "Membru")
                        .WithMany()
                        .HasForeignKey("MembruID");

                    b.HasOne("MusicSchoolWEB.Models.Programare", "Programare")
                        .WithMany()
                        .HasForeignKey("ProgramareID");

                    b.Navigation("Membru");

                    b.Navigation("Programare");
                });

            modelBuilder.Entity("MusicSchoolWEB.Models.MembruInstrument", b =>
                {
                    b.HasOne("MusicSchoolWEB.Models.Instrument", "Intrument")
                        .WithMany()
                        .HasForeignKey("InstrumentID");

                    b.HasOne("MusicSchoolWEB.Models.Membru", "Membru")
                        .WithMany()
                        .HasForeignKey("MembruID");

                    b.Navigation("Intrument");

                    b.Navigation("Membru");
                });

            modelBuilder.Entity("MusicSchoolWEB.Models.Programare", b =>
                {
                    b.HasOne("MusicSchoolWEB.Models.Membru", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID");

                    b.HasOne("MusicSchoolWEB.Models.Membru", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherID");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
